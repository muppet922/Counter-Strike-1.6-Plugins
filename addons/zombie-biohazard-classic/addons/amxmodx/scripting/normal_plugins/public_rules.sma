/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <amxmisc>

#define PLUGIN "Public Rules"
#define VERSION "1.0"
#define AUTHOR "sPuf ?"

#define TASK 12222
#define MAX_RULES 5

new g_hud;

new const Rules[MAX_RULES][] =
{
	
	"* Pentru a planta si deplanta lasere, scrieti in consola urmatoarele:",
	"- bind v +setlaser / bind c +dellaser",
	"* Pentru a utiliza puterea Zombie Smoker-ului, scrieti in consola urmatoarele:",
	"- bind f +drag",
	"* Echipa OLDONES va ureaza un joc cat mai placut."
	
}
public plugin_init() {
	register_plugin(PLUGIN, VERSION, AUTHOR)
	
	register_clcmd("say /info","SayRules");
	g_hud = CreateHudSyncObj();
}
public client_putinserver(id)
{
	set_task(10.0,"taskShowRules",id+TASK);
	set_task(11.0,"taskShowRulesSecond",id+TASK);
}
public taskShowRules(id)
{
	id -= TASK;
	if(is_user_connected(id) )
	{
		ShowRules(id);
	}
}
public taskShowRulesSecond(id)
{
	id -= TASK;
	if(is_user_connected(id) )
	{
		ShowRulesSecond(id);
	}
}
public SayRules(id)
{
	set_task(1.0,"taskShowRules",id+TASK);
	set_task(2.0,"taskShowRulesSecond",id+TASK);
}
public ShowRules(id)
{
	new hudmessage[440];
	
	set_hudmessage( 0, 130, 255, 0.02, 0.25, 2, 0.1, 10.0, 0.05, 1.0, 3);
	format(hudmessage, sizeof (hudmessage) -1, "");
	for (new i = 0; i < MAX_RULES; i++)
	{
		add(hudmessage, sizeof (hudmessage) -1, Rules[i]);
		add(hudmessage, sizeof (hudmessage) -1, "^n");
	}
	ShowSyncHudMsg(id, g_hud,hudmessage);
	return 0;
}
public ShowRulesSecond(id)
{
	new hudmessage[440];
	
	set_hudmessage( 0, 130, 255, 0.02, 0.25, 2, 0.1, 10.0, 0.05, 1.0, 2);
	format(hudmessage, sizeof (hudmessage) -1, "");
	for (new i = 0; i < MAX_RULES; i++)
	{
		add(hudmessage, sizeof (hudmessage) -1, Rules[i]);
		add(hudmessage, sizeof (hudmessage) -1, "^n");
	}
	ShowSyncHudMsg(id, g_hud,hudmessage);
	return 0;
}